include("stdtest.ph");

func operator std.int(a:std.char){ return std.int(a); }

class foo
{
public:
    func new(a:std.int) ... a(a) { }

    func f(z:std.int = 'A', y = 321);
    func g(z:std.char);

    var a:std.int;
}

func foo.f(z:std.int, y:std.int)
{
    test.assert(z == 65);
    test.assert(y == 321);
}

func foo.g(z:std.char = 'a')
{
    test.assert(z == 'a');
}

func f(b:std.int, a:foo = 123)
{
    test.assert(a.a == 123);
    a.f();
    a.g();
}

class woo
{
public:
    func new() ... x(123) { }

    var x:std.int;
}

func g(w = woo())
{
    test.assert(w.x == 123);
}

include("stdios.ph");

class foo2
{
public:
    func new(a = 10) ... a(a) { }

    var a:std.int;
}

func g2(a = foo2())
{
    test.assert(a.a == 10);
}

func main()
{
    f(321);
    g();
    g2();
}
