include "stdtest.ph";

var g = 0;
var t = 0;

class foo
{
    func new(a:ref std.int) ... x(a) { g = g + 1; t = t + 1; }
    func new(a:ref foo) ... x(a.x) { g = g + 1; t = t + 1; }
    func delete(){ g = g - 1; }

    var x:ref std.int;
}

func normal()
{
    {
        var i = 123;
        var f = foo(i);

        test.assert(f.x == 123);
        test.assert(g == 1);
    }

    test.assert(g == 0);
    test.assert(t == 2);
}

pragma push;
pragma set "O=ellide_constructor_copies";

func optimised()
{
    {
        var i = 123;
        var f = foo(i);

        test.assert(f.x == 123);
        test.assert(g == 1);
    }

    test.assert(g == 0);
    test.assert(t == 1);
}

pragma pop;

func main()
{
    normal();

    g = t = 0;
    optimised();

    g = t = 0;
    normal();
}
